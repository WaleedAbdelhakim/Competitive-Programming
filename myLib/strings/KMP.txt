#include <bits/stdc++.h>

using namespace std;

struct KMP {
    string patt;
    vector<int> f;
    vector<vector<int> > memo;
    KMP(string p) {
        patt = p;
        f = vector<int> (patt.size() , 0);
        memo = vector<vector<int> > (patt.size() + 1 , vector<int> (26 , -1));
        for (int i = 1 ;i < patt.size() ;i++)
            f[i] = getNewLen(f[i - 1] , patt[i]);
    }

    int getNewLen(int len , char c) {
        if (!len) return c == patt[0];
        int &ret = memo[len][c - 'a'];
        if (~ret) return ret;
        if (len < patt.size() && patt[len] == c) return ret = len + 1;
        return ret = getNewLen(f[len - 1] , c);
    }
};
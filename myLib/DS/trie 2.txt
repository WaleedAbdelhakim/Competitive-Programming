#include <bits/stdc++.h>

using namespace std;

struct trie {
    vector<vector<int> > v;
    vector<bool> leaf;

    trie () {
        v.push_back(vector<int>(26 , -1));
        leaf.push_back(0);
    }

    void insert (string &s) {
        int cur = 0;
        for (int i = 0 ;i < s.size() ;i++) {
            if (v[cur][s[i] - 'a'] == -1) {
                v[cur][s[i] - 'a'] = v.size();
                v.push_back(vector<int>(26 , -1));
                leaf.push_back(0);
            }
            cur = v[cur][s[i] - 'a'];
        }
        leaf[cur] = 1;
    }

    bool exist(string &s) {
        int cur = 0;
        for (int i = 0 ;i < s.size() ;i++) {
            if (v[cur][s[i] - 'a'] == -1)
                return 0;
            cur = v[cur][s[i] - 'a'];
        }
        return leaf[cur];
    }

    bool isPrefix (string &s) {
        int cur = 0;
        for (int i = 0 ;i < s.size() ;i++) {
            if (v[cur][s[i] - 'a'] == -1)
                return 0;
            cur = v[cur][s[i] - 'a'];
        }
        return 1;
    }
};
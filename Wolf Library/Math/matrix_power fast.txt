const int MOD = 1e9 + 7  , N = 1e5 + 5;

struct mat{
    static const int M = 2;
    int a[M][M];
    mat(bool v = 0){
        memset(a, 0, sizeof a);
        for(int i = 0; i < M; i++)  a[i][i] = v;
    }
    int* operator[](int idx){
        return a[idx];
    }
    mat operator *(mat &b){
        mat ans;
        for(int i = 0; i < M; i++)
            for(int k = 0; k < M; k++)
                for(int j = 0; j < M; j++)
                    ans[i][j] = (ans[i][j] + a[i][k] * 1ll * b[k][j]) % MOD;
        return ans;
    }

    mat operator +(mat &b){
        mat ans;
        for(int i = 0; i < M; i++)
            for(int j = 0; j < M; j++)
                ans[i][j] = (a[i][j] + b[i][j]) % MOD;

        return ans;
    }
};

mat operator ^(mat a, int b){
    mat ans(1);
    for( ; b; b >>= 1, a = a * a)
        if(b & 1)
            ans = ans * a;
    return ans;
}